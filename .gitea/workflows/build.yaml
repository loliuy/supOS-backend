name: Gitea Actions Demo
run-name: ${{ gitea.actor }} is testing out Gitea Actions üöÄ
on: [push]

jobs:
  Explore-Gitea-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ gitea.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by Gitea!"
      - run: echo "üîé The name of your branch is ${{ gitea.ref }} and your repository is ${{ gitea.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v4

      - run: echo "üí° The ${{ gitea.repository }} repository has been cloned to the runner."

      - name: List files in the repository
        run: |
          ls ${{ gitea.workspace }}          

      - name: Build Docker image
        run: |
          docker build -t ${{ gitea.repository }}:latest .      

      # - name: Set up JDK 17
      #   uses: actions/setup-java@v3
      #   with:
      #     distribution: 'temurin' 
      #     java-version: '17'
      #     cache: 'maven'

      # - name: Install Maven
      #   run: sudo apt update && sudo apt install maven -y

      # - name: Install Trivy (via APT)
      #   run: |
      #     sudo apt update
      #     sudo apt install -y wget apt-transport-https gnupg lsb-release
      #     wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo tee /etc/apt/trusted.gpg.d/trivy.asc
      #     echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
      #     sudo apt update
      #     sudo apt install -y trivy
      #     trivy --version  

      # - name: Run Dependency Check
      #   run: |
      #     wget https://github.com/jeremylong/DependencyCheck/releases/download/v12.1.0/dependency-check-12.1.0-release.zip
      #     unzip dependency-check-12.1.0-release.zip
      #     ./dependency-check/bin/dependency-check.sh \
      #       --project "${{ gitea.repository }}" \
      #       --scan . \
      #       --format HTML \
      #       --out reports/
      #     echo "Dependency Check Report generated at reports/dependency-check-report.html"
      #   continue-on-error: true


      # - name: Run Trivy Scan (SARIF Format)
      #   run: |
      #     mkdir -p reports
      #     trivy fs --scanners vuln,secret . --format sarif -o reports/trivy-report.sarif
      #     echo "Trivy Scan Report generated at reports/trivy-report.sarif"
      #   continue-on-error: true

      # - name: Copy reports to MinIO
      #   run: |
      #     curl https://dl.min.io/client/mc/release/linux-amd64/mc -o ./mc
      #     chmod +x ./mc
      #     ./mc alias set myminio http://minio:9000 admin adminpassword
      #     ./mc mb myminio/scanreport
      #     ./mc mirror reports myminio/scanreport
      #   continue-on-error: true
        
      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: Tag and push Docker image
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          
          docker tag ${{ gitea.repository }}:latest wenhao96/$(basename ${{ gitea.repository }}):${TIMESTAMP}
          docker push wenhao96/$(basename ${{ gitea.repository }}):${TIMESTAMP}      

          docker tag ${{ gitea.repository }}:latest wenhao96/$(basename ${{ gitea.repository }}):latest
          docker push wenhao96/$(basename ${{ gitea.repository }}):latest    

          docker rmi wenhao96/$(basename ${{ gitea.repository }}):${TIMESTAMP}
          docker rmi wenhao96/$(basename ${{ gitea.repository }}):latest       

      - name: Clean up
        run: |
          docker builder prune --all --force
          docker volume prune -f
          docker network prune -f
          docker system df          
          docker rmi $(docker images --filter "dangling=true" -q) || true

      - run: echo "üçè This job's status is ${{ job.status }}."
